{
  "registry": {
    "check_schema_consistency": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_data_freshness": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_governance_compliance": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_data_lineage": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_metadata_coverage": {
      "depends_on": [],
      "category": "Innovation Pipeline"
    },
    "evaluate_sensitive_tagging": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_duplication": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_backup_recovery": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_security_config": {
      "depends_on": [],
      "category": "Development Maturity"
    },
    "evaluate_resource_utilization": {
      "depends_on": [],
      "category": "Innovation Pipeline"
    },
    "assess_query_performance": {
      "depends_on": [],
      "category": "Innovation Pipeline"
    },
    "evaluate_data_quality": {
      "depends_on": [
        "check_schema_consistency",
        "evaluate_data_freshness"
      ],
      "category": "Development Maturity"
    },
    "compute_pipeline_success_rate": {
      "depends_on": [
        "evaluate_data_lineage"
      ],
      "category": "Innovation Pipeline"
    },
    "compute_pipeline_latency_throughput": {
      "depends_on": [
        "evaluate_data_lineage"
      ],
      "category": "Innovation Pipeline"
    },
    "compute_analytics_adoption": {
      "depends_on": [
        "evaluate_metadata_coverage",
        "check_schema_consistency",
        "evaluate_data_freshness"
      ],
      "category": "Innovation Pipeline"
    }
  },
  "context_keys": [
    "baseline_schema",
    "table_schemas",
    "table_metadata",
    "data_quality_report",
    "access_logs",
    "lineage",
    "metadata",
    "tagging",
    "duplication",
    "backup",
    "security",
    "pipeline_runs",
    "pipeline_metrics",
    "resource_usage",
    "query_logs",
    "user_activity"
  ],
  "results": {
    "evaluate_metadata_coverage": {
      "metric_id": "metadata.coverage",
      "score": 2,
      "rationale": "50% of tables are fully documented (orders and transactions have all fields, customers missing description, inventory missing owner).",
      "gap": [
        "Enforce metadata documentation standards.",
        "Assign data stewards to fill gaps.",
        "Implement training for data owners on required metadata fields."
      ]
    },
    "check_schema_consistency": {
      "metric_id": "schema.consistency",
      "score": 2,
      "rationale": "Missing fields `created_at` and `signup_source` in users; `returns` table is present in actual but not in baseline; ~20% of required fields are absent or different.",
      "gap": [
        "Add the missing fields `created_at` and `signup_source` to the actual schema for users.",
        "Remove the `returns` table from the actual schema if it is not required.",
        "Implement schema validation checks during deployment."
      ]
    },
    "evaluate_duplication": {
      "metric_id": "duplication",
      "score": 3,
      "rationale": "Finance domain has low duplication (10%), marketing shows moderate duplication (26.67%), and operations has moderate duplication (20%). Overall, moderate duplication exists primarily in marketing and operations.",
      "gap": [
        "Implement domain-specific deduplication algorithms.",
        "Enforce single source of truth principles.",
        "Develop a data consolidation roadmap prioritizing marketing and operations."
      ]
    },
    "evaluate_data_lineage": {
      "metric_id": "data.lineage",
      "score": 4,
      "rationale": "80% lineage coverage (40 tables undocumented). Coverage is good but there are significant gaps, especially in the marketing domain where only 62.5% of tables have lineage documented.",
      "gap": [
        "Implement automated lineage extraction tooling to improve coverage.",
        "Focus on documenting missing data flows in the marketing domain.",
        "Enhance training for teams to ensure all new tables are registered with lineage."
      ]
    },
    "evaluate_sensitive_tagging": {
      "metric_id": "sensitive.tagging",
      "score": 1,
      "rationale": "Across all datasets, 3 out of 7 sensitive fields are tagged (42.86%). Critical sensitive fields such as 'ssn' in 'users', 'customer_id' in 'orders', and 'credit_card' in 'orders' remain untagged, posing significant compliance risks.",
      "gap": [
        "Deploy automated PII detection and classification tools.",
        "Enforce mandatory tagging workflows.",
        "Assign data stewards to ensure compliance.",
        "Conduct regular audits of sensitive data tagging."
      ]
    },
    "evaluate_governance_compliance": {
      "metric_id": "governance.compliance",
      "score": 3,
      "rationale": "1000 requests total, 80 were violations (~8% rate). Moderate issues exist with access governance, indicating a need for improvement in compliance measures.",
      "gap": [
        "Enhance monitoring of access requests.",
        "Implement stricter credential management policies.",
        "Conduct regular training on access controls and data protection.",
        "Review and update access permissions regularly."
      ]
    },
    "evaluate_data_freshness": {
      "metric_id": "data.freshness",
      "score": 2,
      "rationale": "Table users is healthy, last updated 45m ago (within SLA). Table orders is stale, last updated 5h ago (4h SLA breach). Table inventory is severely stale, last updated 26h ago (26h SLA breach). Table transactions is healthy, last updated 15m ago (within SLA). Overall, multiple tables are consistently behind SLA, indicating major issues.",
      "gap": [
        "Reschedule the orders ingestion pipeline.",
        "Investigate delays in inventory updates.",
        "Implement monitoring for SLA compliance across all tables."
      ]
    },
    "evaluate_security_config": {
      "metric_id": "security.config",
      "score": 3,
      "rationale": "Encryption settings are compliant for both at rest and in transit. Public access is disabled as required. Firewall is enabled, and multi-factor authentication is active. However, the 'guest' IAM role has 'read_only_limited' permissions instead of the required 'no_access', which constitutes a misconfiguration.",
      "gap": [
        "Restrict 'guest' IAM role permissions to comply with policy."
      ]
    },
    "evaluate_backup_recovery": {
      "metric_id": "backup.recovery",
      "score": 4,
      "rationale": "Primary DB backup meets high criticality SLAs with 98% success, RPO 0.8h, RTO 0.9h. Analytics warehouse backup has moderate success (93%) and RPO/RTO within acceptable ranges for medium criticality. Log data backup shows lower success (85%) and longer RPO/RTO but is low criticality, which does not significantly impact the overall score.",
      "gap": [
        "Improve backup success for log data backup to exceed 85% success rate.",
        "Consider reducing RPO for log data backup to align better with organizational standards.",
        "Enhance monitoring and alerting for all backup systems to quickly identify and resolve issues."
      ]
    },
    "evaluate_resource_utilization": {
      "metric_id": "resource.utilization",
      "score": 3,
      "rationale": "Average resource utilization is ~52% across clusters with a total monthly spend of $14.6k. The 'etl-dev' and 'training-gpu' clusters show underutilization, indicating potential overprovisioning.",
      "gap": [
        "Right-size clusters.",
        "Implement auto-scaling.",
        "Schedule FinOps reviews for cost reduction."
      ]
    },
    "assess_query_performance": {
      "metric_id": "query.performance",
      "score": 3,
      "rationale": "Avg query runtime ~8.1s. The slowest successful query took 33.5s. Users bob and eve experienced failures with their queries.",
      "gap": [
        "Add indexes.",
        "Optimize joins.",
        "Review query logic for efficiency."
      ]
    },
    "compute_pipeline_latency_throughput": {
      "metric_id": "pipeline.latency_throughput",
      "score": 1,
      "rationale": "130m avg runtime for customer_dim_refresh, 320k rows processed. Queue wait 30m. Significant delays and low throughput indicate serious performance issues.",
      "gap": [
        "Optimize customer_dim_refresh queries.",
        "Increase resources for the customer_dim_refresh job.",
        "Reduce queue wait times by improving scheduling."
      ]
    },
    "compute_analytics_adoption": {
      "metric_id": "analytics.adoption",
      "score": 4,
      "rationale": "Good adoption with 65 active users and 1800 views, indicating healthy engagement. Sales and marketing departments show moderate usage, while finance and operations have lower engagement levels.",
      "gap": [
        "Increase training sessions for finance and operations departments.",
        "Promote dashboards more actively within these departments.",
        "Encourage user enablement initiatives to boost overall engagement."
      ]
    },
    "compute_pipeline_success_rate": {
      "metric_id": "pipeline.success_rate",
      "score": 3,
      "rationale": "70% success (7/10). Below SLA. Key failures in 'inventory_load' and 'customer_dim_refresh'. Notable runtime anomalies with failures having 0 seconds.",
      "gap": [
        "Investigate cause of failures in 'inventory_load' and 'customer_dim_refresh'.",
        "Implement job retries for failed pipelines.",
        "Enhance monitoring and alerting for all jobs."
      ]
    },
    "evaluate_data_quality": {
      "metric_id": "data.quality",
      "score": 2,
      "rationale": "Overall issue rate is ~30% (15% nulls, 20% outliers) in the transactions table, which is the worst case. Users table has 3% issues (2% nulls, 1% duplicates) and orders table has 18% issues (10% nulls, 3% duplicates, 5% outliers).",
      "gap": [
        "Implement NOT NULL constraints on critical fields in orders and transactions tables.",
        "Deploy deduplication processes for orders and transactions.",
        "Investigate and address the causes of outliers in the transactions table."
      ]
    }
  },
  "aggregates": {
    "per_category_1to5": {
      "Development Maturity": 2.67,
      "Innovation Pipeline": 2.67
    },
    "overall_score_1to5": 2.67
  }
}
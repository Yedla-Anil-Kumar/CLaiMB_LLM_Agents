[
  {
    "agent": "ml_ops",
    "inputs_summary": {
      "present": [
        "mlflow_experiment_completeness",
        "mlflow_lineage_coverage",
        "mlflow_best_run_trend",
        "mlflow_registry_hygiene",
        "mlflow_validation_artifacts",
        "mlflow_reproducibility",
        "aml_endpoint_slo",
        "aml_jobs_flow",
        "aml_monitoring_coverage",
        "aml_registry_governance",
        "aml_cost_correlation",
        "cicd_deploy_frequency",
        "cicd_lead_time",
        "cicd_change_failure_rate",
        "cicd_policy_gates",
        "cicd_artifact_lineage"
      ],
      "declared_slo": {
        "availability": 0.995,
        "p95_ms": 300,
        "error_rate": 0.01
      },
      "policy_required_checks": [
        "pytest",
        "integration-tests",
        "bandit",
        "trivy",
        "bias_check",
        "data_validation"
      ]
    },
    "metric_breakdown": {
      "mlflow.experiment_completeness_band": {
        "metric_id": "mlflow.experiment_completeness_band",
        "band": 3,
        "rationale": "Parameter and tag logging are strong, but the overall completeness at 0.82 and artifacts at 0.82 are the main limiting factors.",
        "flags": [
          "artifacts_low"
        ],
        "gaps": [
          "pct_all at 0.82 limits the band → ensure all runs log artifacts consistently → raise pct_artifacts to ≥0.85 (unlocks band 4)."
        ]
      },
      "mlflow.lineage_coverage_band": {
        "metric_id": "mlflow.lineage_coverage_band",
        "band": 4,
        "rationale": "All metrics are above 0.85, with pct_git_sha and pct_env_files at 0.91, which are strong positives. However, pct_data_ref at 0.86 is the limiting factor preventing a higher band.",
        "flags": [],
        "gaps": [
          "Data references at 0.86 block a higher band → log immutable dataset version/hash per run → raise pct_data_ref to ≥0.90 (unlocks band 5)."
        ]
      },
      "mlflow.experiment_velocity_band": {
        "metric_id": "mlflow.experiment_velocity_band",
        "band": 5,
        "rationale": "Both the monthly improvement rate and the number of experiments per week exceed the thresholds for band 5, indicating a strong performance in both areas. The consistent improvement and experimentation suggest a robust MLOps process.",
        "flags": [],
        "gaps": []
      },
      "mlflow.registry_hygiene_band": {
        "metric_id": "mlflow.registry_hygiene_band",
        "band": 4,
        "rationale": "Both pct_staged and pct_with_approver are above 0.80, and median latency is within the acceptable range; however, the presence of one rollback prevents achieving band 5.",
        "flags": [
          "rollback_present"
        ],
        "gaps": [
          "One recent rollback limits confidence → add pre-deploy shadow tests and tighten rollback criteria → keep rollbacks_30d at 0 (unlocks band 5)."
        ]
      },
      "mlflow.validation_artifacts_band": {
        "metric_id": "mlflow.validation_artifacts_band",
        "band": 3,
        "rationale": "The validation JSON coverage is strong at 0.88, but both SHAP and bias report percentages are below 0.80, which limits the overall band.",
        "flags": [
          "bias_coverage_low",
          "shap_coverage_low"
        ],
        "gaps": [
          "SHAP coverage at 0.84 → implement SHAP file generation in all runs → raise pct_with_shap to ≥0.85 (unlocks band 4).",
          "Bias report at 0.72 → integrate a bias evaluation step in the pipeline → raise pct_with_bias_report to ≥0.80 (unlocks band 4)."
        ]
      },
      "mlflow.reproducibility_band": {
        "metric_id": "mlflow.reproducibility_band",
        "band": 4,
        "rationale": "The match rate is strong at 0.88, indicating good reproducibility, but there is a minor signature conflict present.",
        "flags": [
          "conflicts_present"
        ],
        "gaps": [
          "Signature conflict on 'sigA' → ensure consistent model signatures across runs → remove conflict occurrences and lift match_rate ≥0.95 (unlocks band 5)."
        ]
      },
      "aml.endpoint_slo_band": {
        "metric_id": "aml.endpoint_slo_band",
        "band": 5,
        "rationale": "All measured dimensions exceed SLOs with healthy margins. The availability is above the declared SLO by 0.002, the p95 latency is well below the threshold, and the error rate is significantly lower than the target.",
        "flags": [],
        "gaps": []
      },
      "aml.jobs_flow_band": {
        "metric_id": "aml.jobs_flow_band",
        "band": 4,
        "rationale": "Success rate meets the threshold, and lead time is acceptable; however, p95 duration is slightly above the limit.",
        "flags": [],
        "gaps": [
          "p95 duration at 38 minutes is the limiter → optimize job execution and resource allocation → target p95 duration to ≤30 minutes (unlocks band 5)."
        ]
      },
      "aml.monitoring_coverage_band": {
        "metric_id": "aml.monitoring_coverage_band",
        "band": 5,
        "rationale": "All monitoring systems are enabled, and the median time to acknowledge alerts is well below 2 hours, indicating a strong response capability. The presence of drift alerts also suggests active monitoring and engagement with the system's performance.",
        "flags": [],
        "gaps": []
      },
      "aml.registry_governance_band": {
        "metric_id": "aml.registry_governance_band",
        "band": 4,
        "rationale": "Both pct_staged and pct_with_approvals are above 0.80, and the median transition time is within the acceptable range for band 4. However, the median transition time of 60 hours is not low enough to reach band 5.",
        "flags": [],
        "gaps": [
          "Median transition time at 60h prevents band-5 → streamline transition processes and reduce bottlenecks → target median_transition_h to <48h (unlocks band 5).",
          "Staging coverage at 0.83 <0.90 → enforce stage on register policy → raise pct_staged to ≥0.90 (supports band 5)."
        ]
      },
      "aml.cost_correlation_band": {
        "metric_id": "aml.cost_correlation_band",
        "band": 5,
        "rationale": "The cost join rate is excellent at 0.93, and the coverage is comprehensive with 'tags+resourceId', indicating stable attribution. The cost per 1k requests is also low, reflecting efficient tracking.",
        "flags": [],
        "gaps": []
      },
      "sm.endpoint_slo_scaling_band": {
        "metric_id": "sm.endpoint_slo_scaling_band",
        "band": 1,
        "rationale": "No evidence is provided, which fails to meet any thresholds. The absence of data prevents any assessment of performance metrics.",
        "flags": [],
        "gaps": [
          "Missing evidence prevents evaluation → collect and report availability, error rate, p95, reaction time, and max RPS → meet all thresholds for band 3."
        ]
      },
      "sm.pipeline_flow_band": {
        "metric_id": "sm.pipeline_flow_band",
        "band": 3,
        "rationale": "The success rate is good at 0.96, but the promotion time exceeds the band-3 threshold at 12h, which limits the overall band. The p95 duration is also borderline, impacting the overall performance.",
        "flags": [],
        "gaps": [
          "Promotion time at 12h → automate risk sign-off and bake validation into CI → reduce promotion_time_h to ≤24h (unlocks band 4).",
          "p95 at 42min → parallelize feature gen and cache heavy steps → keep p95 ≤60min (reinforces band 4)."
        ]
      },
      "sm.experiments_lineage_band": {
        "metric_id": "sm.experiments_lineage_band",
        "band": 4,
        "rationale": "All lineage metrics are above 0.85, with two metrics above 0.90; however, the code reference is slightly below the threshold for band 5.",
        "flags": [],
        "gaps": [
          "Code ref at 0.9 limits band-5 → implement stricter code review processes to ensure all experiments have code references → raise pct_code_ref to ≥0.95 (unlocks band 5)."
        ]
      },
      "sm.clarify_coverage_band": {
        "metric_id": "sm.clarify_coverage_band",
        "band": 1,
        "rationale": "Both metrics are missing, which results in a critical band of 1. There are no positive aspects to highlight.",
        "flags": [],
        "gaps": [
          "Both metrics are missing → implement tracking for bias and explainability reports → achieve pct_with_bias_report and pct_with_explainability ≥0.60 (unlocks band 2)."
        ]
      },
      "sm.cost_efficiency_band": {
        "metric_id": "sm.cost_efficiency_band",
        "band": 1,
        "rationale": "All metrics indicate significant inefficiencies: high serving cost, excessive training cost, very high GPU headroom, and a concerning idle ratio. These factors collectively demonstrate heavy waste across several dimensions.",
        "flags": [
          "serving_cost_high",
          "training_cost_high",
          "gpu_headroom_high",
          "idle_ratio_high"
        ],
        "gaps": [
          "Serving cost 0.11/1k → enable model quantization and autoscaling down → keep per_1k ≤ 0.10 (unlocks band 4).",
          "Training cost 5.2/hour → optimize training process or resource allocation → reduce to ≤4 (unlocks band 4).",
          "High GPU headroom at 52% → reduce instance size or increase batch size → bring headroom into 10–40% (unlocks band 4).",
          "Idle ratio at 0.26 → improve resource scheduling or utilization strategies → keep idle ratio <0.20 (unlocks band 4)."
        ]
      },
      "cicd.deploy_frequency_band": {
        "metric_id": "cicd.deploy_frequency_band",
        "band": 4,
        "rationale": "The overall frequency of deployments is good, but the per-service rate is just below the threshold for excellent. With 5.2 deployments per week across 7 services, the per-service rate is approximately 0.74, which is not quite at the level needed for a higher band.",
        "flags": [],
        "gaps": [
          "per-service rate is below threshold → increase deployments or reduce services → achieve ≥1/week/service (unlocks band 5)"
        ]
      },
      "cicd.lead_time_band": {
        "metric_id": "cicd.lead_time_band",
        "band": 4,
        "rationale": "p50 < 8h and p95 < 24h meet band-4; p50 > 4h blocks band-5.",
        "flags": [],
        "gaps": [
          "p50 at 6.8h prevents band-5 → shard tests and cache dependencies → reduce p50 ≤4h (unlocks band 5)."
        ]
      },
      "cicd.change_failure_rate_band": {
        "metric_id": "cicd.change_failure_rate_band",
        "band": 5,
        "rationale": "Both the change failure rate (CFR) at 0.11 and the rollbacks in the last 30 days at 3 are well within the excellent band limits. This indicates a strong deployment process with minimal failures and rollbacks.",
        "flags": [],
        "gaps": []
      },
      "cicd.policy_gates_band": {
        "metric_id": "cicd.policy_gates_band",
        "band": 5,
        "rationale": "All required checks are present and have passed successfully in the logs, indicating a robust CI/CD process.",
        "present": [
          "pytest",
          "integration-tests",
          "bandit",
          "trivy",
          "bias_check",
          "data_validation"
        ],
        "missing": [],
        "failing": [],
        "gaps": []
      },
      "cicd.artifact_lineage": {
        "metric_id": "cicd.artifact_lineage",
        "integrity_ok": true,
        "mismatches": []
      }
    },
    "mode": "single_inputs_json"
  },
  {
    "agent": "ml_ops",
    "inputs_summary": {
      "present": [
        "mlflow_experiment_completeness",
        "mlflow_lineage_coverage",
        "mlflow_best_run_trend",
        "aml_endpoint_slo",
        "aml_jobs_flow",
        "sm_endpoint_slo_scaling",
        "sm_pipeline_stats",
        "cicd_deploy_frequency",
        "cicd_lead_time",
        "cicd_change_failure_rate",
        "cicd_policy_gates",
        "cicd_artifact_lineage"
      ],
      "declared_slo": {
        "availability": 0.995,
        "p95_ms": 300,
        "error_rate": 0.01
      },
      "policy_required_checks": [
        "pytest",
        "integration-tests",
        "bandit",
        "trivy",
        "bias_check",
        "data_validation"
      ]
    },
    "metric_breakdown": {
      "mlflow.experiment_completeness_band": {
        "metric_id": "mlflow.experiment_completeness_band",
        "band": 1,
        "rationale": "All fields are below the minimum threshold, with pct_all at 0.42 being the most critical issue. The lack of parameters, metrics, tags, and artifacts severely limits the overall completeness.",
        "flags": [
          "all_fields_low"
        ],
        "gaps": [
          "pct_all at 0.42 is critical → ensure all runs log parameters, metrics, tags, and artifacts → raise pct_all to ≥0.60 (unlocks band 2)."
        ]
      },
      "mlflow.lineage_coverage_band": {
        "metric_id": "mlflow.lineage_coverage_band",
        "band": 1,
        "rationale": "All metrics are below 0.60, indicating critical gaps in lineage coverage. The highest metric, pct_env_files at 0.6, is still insufficient to meet any band threshold.",
        "flags": [
          "git_sha_coverage",
          "data_ref_coverage",
          "env_files_coverage"
        ],
        "gaps": [
          "All metrics below 0.60 indicate critical gaps → implement logging for Git SHA, data references, and environment files → raise all metrics to ≥0.70 (unlocks band 3)."
        ]
      },
      "mlflow.experiment_velocity_band": {
        "metric_id": "mlflow.experiment_velocity_band",
        "band": 1,
        "rationale": "Both the improvement rate and the number of experiments are below the minimum thresholds, indicating a critical lack of progress and experimentation. The negative improvement rate suggests a decline in performance, which is concerning.",
        "flags": [],
        "gaps": [
          "Negative improvement rate and low experiments per week → implement a structured experimentation process and focus on performance improvements → achieve improvement_rate_mom ≥ 0.01 and experiments_per_week ≥ 1.0 (unlocks band 2)."
        ]
      },
      "mlflow.registry_hygiene_band": {
        "metric_id": "mlflow.registry_hygiene_band",
        "band": 1,
        "rationale": "Evidence is missing, which directly leads to a critical band rating. Without any data, it's impossible to assess the performance against the rubric criteria.",
        "flags": [
          "evidence_missing"
        ],
        "gaps": [
          "Missing evidence prevents any assessment → collect and report pct_staged, pct_with_approver, median_stage_latency_h, and rollback_count_30d → provide complete evidence (unlocks band 3)."
        ]
      },
      "mlflow.validation_artifacts_band": {
        "metric_id": "mlflow.validation_artifacts_band",
        "band": 1,
        "rationale": "All metrics are below the critical threshold of 0.60, indicating significant gaps in model evaluation and reporting. The absence of evidence limits the ability to assess model performance effectively.",
        "flags": [
          "missing_evidence"
        ],
        "gaps": [
          "All metrics below 0.60 → implement mandatory reporting for SHAP, bias, and validation JSON → raise all metrics to ≥0.60 (unlocks band 2)."
        ]
      },
      "mlflow.reproducibility_band": {
        "metric_id": "mlflow.reproducibility_band",
        "band": 3,
        "rationale": "The match rate is acceptable, but there are some signature conflicts that limit the overall score. Addressing these conflicts could improve the reliability of the results.",
        "flags": [
          "conflicts_present"
        ],
        "gaps": [
          "Signature conflicts present → resolve discrepancies in model signatures → lift match_rate to ≥0.85 (unlocks band 4)."
        ]
      },
      "aml.endpoint_slo_band": {
        "metric_id": "aml.endpoint_slo_band",
        "band": 2,
        "rationale": "Only the availability_30d is close to the declared SLO, while both p95_ms and error_rate exceed their respective limits significantly. The high p95_ms and error_rate are the main limiting factors.",
        "flags": [],
        "gaps": "p95_ms at 420 exceeds the declared SLO of 300 → optimize performance to reduce latency → keep p95_ms ≤300 (unlocks band 3)."
      },
      "aml.jobs_flow_band": {
        "metric_id": "aml.jobs_flow_band",
        "band": 1,
        "rationale": "The success rate of 0.86 is significantly below the threshold, and both p95 duration and lead time are far from acceptable limits, indicating critical failure.",
        "flags": [],
        "gaps": [
          "Success at 0.86 is the limiter → implement more robust error handling and monitoring → raise success_rate to ≥0.90 (unlocks band 3).",
          "Lead time of 28h is excessive → streamline job scheduling and resource allocation → target ≤24h (pushes toward band 3 when success is ≥0.90).",
          "p95 duration at 75min is too high → optimize job execution and reduce bottlenecks → target ≤60min (pushes toward band 3 when success is ≥0.90)."
        ]
      },
      "aml.monitoring_coverage_band": {
        "metric_id": "aml.monitoring_coverage_band",
        "band": 1,
        "rationale": "There is no evidence of monitors being enabled or any response process in place, which is critical for effective monitoring.",
        "flags": [],
        "gaps": [
          "Monitors are disabled → enable data/quality/drift monitors → establish a monitoring process (unlocks band 2)."
        ]
      },
      "aml.registry_governance_band": {
        "metric_id": "aml.registry_governance_band",
        "band": 3,
        "rationale": "While pct_staged and pct_with_approvals are above the minimum for band 3, the median transition time exceeds the threshold, limiting the overall band rating.",
        "flags": [],
        "gaps": [
          "Median transition time at 60h exceeds band-3 limit → optimize transition processes → reduce median_transition_h to <48h (unlocks band 5)."
        ]
      },
      "aml.cost_correlation_band": {
        "metric_id": "aml.cost_correlation_band",
        "band": 1,
        "rationale": "There is no provided evidence for cost_join_rate or coverage, indicating critical limitations in attribution. Without usable attribution data, the metric cannot be assessed effectively.",
        "flags": [],
        "gaps": [
          "No usable attribution data → implement tracking for cost_join_rate and coverage → establish a cost_join_rate of ≥0.40 (unlocks band 2)."
        ]
      },
      "sm.endpoint_slo_scaling_band": {
        "metric_id": "sm.endpoint_slo_scaling_band",
        "band": 2,
        "rationale": "Only the availability and error rate meet the band-3 thresholds, while p95 latency and max RPS are significantly below the required levels. The median reaction time is also above the acceptable threshold, limiting overall performance.",
        "flags": [],
        "gaps": [
          "p95 at 260ms above 300ms threshold → optimize query performance and reduce latency → keep p95 ≤300ms (unlocks band 3).",
          "Max RPS at 300 below 400 → enhance infrastructure and load balancing → raise max_rps_at_slo to ≥400 (unlocks band 3).",
          "Reaction time 110s >120s → implement proactive scaling strategies → reduce median_reaction_s ≤120s (unlocks band 3)."
        ]
      },
      "sm.pipeline_flow_band": {
        "metric_id": "sm.pipeline_flow_band",
        "band": 2,
        "rationale": "The success rate is below the acceptable threshold, and both the promotion time and p95 duration are significantly higher than the limits for any band. While the retry rate is not excessively high, the overall performance is critically lacking.",
        "flags": [],
        "gaps": [
          "Success rate at 0.88 → identify and resolve failure points in the pipeline → raise success_rate to ≥0.90 (unlocks band 3).",
          "Promotion time at 36h → streamline model validation and deployment processes → reduce promotion_time_h to ≤24h (unlocks band 3).",
          "p95 duration at 90min → optimize pipeline steps and resource allocation → keep p95_duration_min ≤60min (unlocks band 3)."
        ]
      },
      "sm.experiments_lineage_band": {
        "metric_id": "sm.experiments_lineage_band",
        "band": 3,
        "rationale": "All lineage metrics are above 0.70, with one at 0.85; however, the lowest value at 0.9 does not meet the higher thresholds for a better band. The limiting factor is that none of the metrics reach the 0.85 threshold required for band 4.",
        "flags": [],
        "gaps": [
          "pct_code_ref at 0.9 limits band-4 → implement stricter code reference tracking → raise pct_code_ref to ≥0.85 (unlocks band 4)."
        ]
      },
      "sm.clarify_coverage_band": {
        "metric_id": "sm.clarify_coverage_band",
        "band": 1,
        "rationale": "Both metrics are missing, which results in a critical band of 1. The absence of evidence for bias and explainability severely limits the assessment.",
        "flags": [],
        "gaps": [
          "Both metrics are missing → implement tracking for bias and explainability reports → ensure pct_with_bias_report and pct_with_explainability are both ≥0.60 (unlocks band 2)."
        ]
      },
      "sm.cost_efficiency_band": {
        "metric_id": "sm.cost_efficiency_band",
        "band": 1,
        "rationale": "All metrics indicate significant waste: serving cost is high, training cost exceeds the threshold, GPU headroom is excessive, and idle time is too high.",
        "flags": [
          "serving_cost_high",
          "training_cost_high",
          "gpu_headroom_high",
          "high_idle_ratio"
        ],
        "gaps": [
          "Serving cost 0.11/1k → enable model quantization and autoscaling down → keep per_1k ≤ 0.10 (unlocks band 4).",
          "Training cost 5.2 → optimize training processes or use more efficient algorithms → reduce per_training_hour to ≤4 (unlocks band 4).",
          "High GPU headroom at 52% → reduce instance size or increase batch size → bring headroom into 10–40% (unlocks band 4).",
          "Idle ratio at 0.26 → improve resource scheduling or increase workload efficiency → keep idle_ratio < 0.20 (unlocks band 5)."
        ]
      },
      "cicd.deploy_frequency_band": {
        "metric_id": "cicd.deploy_frequency_band",
        "band": 2,
        "rationale": "The frequency of deployments is sporadic, averaging 0.8 per week across 3 services, which indicates some activity but not enough to meet the monthly threshold per service. The limiting factor is the low deployment frequency, which is below the monthly per-service rate. ",
        "flags": [],
        "gaps": "Low deployment frequency → increase deployment frequency to at least 1 per week → raise freq_per_week to ≥3 (unlocks band 4)."
      },
      "cicd.lead_time_band": {
        "metric_id": "cicd.lead_time_band",
        "band": 1,
        "rationale": "Both p50 and p95 exceed the thresholds for all bands, indicating critical delays in lead time. The p50 at 20h and p95 at 72h are significantly higher than the acceptable limits.",
        "flags": [],
        "gaps": [
          "p50 at 20h and p95 at 72h are critical delays → optimize CI/CD pipeline and reduce bottlenecks → aim for p50 ≤ 4h and p95 ≤ 24h (unlocks band 5)."
        ]
      },
      "cicd.change_failure_rate_band": {
        "metric_id": "cicd.change_failure_rate_band",
        "band": 2,
        "rationale": "CFR at 0.32 is above the threshold for band 3, while rollbacks are within acceptable limits for band 2. The high CFR is the primary limiting factor.",
        "flags": [
          "cfr_high"
        ],
        "gaps": [
          "CFR at 0.32 limits reliability → implement better testing practices and monitoring → bring cfr < 0.30 (unlocks band 3)."
        ]
      },
      "cicd.policy_gates_band": {
        "metric_id": "cicd.policy_gates_band",
        "band": 2,
        "rationale": "Only the pytest check is present and it has failed tests, while the other required checks are missing entirely. This significantly limits the overall effectiveness of the CI process.",
        "present": [
          "pytest"
        ],
        "missing": [
          "integration-tests",
          "bandit",
          "trivy",
          "bias_check",
          "data_validation"
        ],
        "failing": [
          "pytest"
        ],
        "gaps": [
          "Missing required checks reduce overall CI effectiveness → implement all required checks in the workflow → achieve full presence of checks (unlocks band 3)."
        ]
      },
      "cicd.artifact_lineage": {
        "metric_id": "cicd.artifact_lineage",
        "integrity_ok": false,
        "mismatches": [
          {
            "service": "svc-a",
            "built": "sha256:aaa",
            "deployed": "sha256:bbb"
          }
        ]
      }
    },
    "mode": "single_inputs_json"
  },
  {
    "agent": "ml_ops",
    "inputs_summary": {
      "present": [
        "mlflow_experiment_completeness",
        "mlflow_best_run_trend",
        "mlflow_reproducibility",
        "sm_endpoint_slo_scaling",
        "sm_pipeline_stats",
        "sm_experiments_lineage",
        "sm_clarify_coverage",
        "sm_cost_efficiency",
        "cicd_deploy_frequency",
        "cicd_lead_time",
        "cicd_change_failure_rate",
        "cicd_policy_gates",
        "cicd_artifact_lineage"
      ],
      "declared_slo": {
        "availability": 0.995,
        "p95_ms": 300,
        "error_rate": 0.01
      },
      "policy_required_checks": [
        "pytest",
        "integration-tests",
        "bandit",
        "trivy",
        "bias_check",
        "data_validation"
      ]
    },
    "metric_breakdown": {
      "mlflow.experiment_completeness_band": {
        "metric_id": "mlflow.experiment_completeness_band",
        "band": 4,
        "rationale": "All fields are above 0.80, with most at 0.90, but pct_all at 0.88 is the limiting factor preventing a higher band.",
        "flags": [],
        "gaps": [
          "pct_all at 0.88 limits the band → ensure all runs have params, metrics, tags, and artifacts logged → raise pct_all to ≥0.90 (unlocks band 5)."
        ]
      },
      "mlflow.lineage_coverage_band": {
        "metric_id": "mlflow.lineage_coverage_band",
        "band": 1,
        "rationale": "No evidence data is provided, indicating a critical lack of tracking for Git SHA, data references, and environment files.",
        "flags": [],
        "gaps": [
          "Missing all evidence data indicates critical tracking issues → implement logging for Git SHA, data references, and environment files → achieve at least one metric ≥0.60 (unlocks band 2)."
        ]
      },
      "mlflow.experiment_velocity_band": {
        "metric_id": "mlflow.experiment_velocity_band",
        "band": 5,
        "rationale": "Both the monthly improvement rate and the number of experiments per week exceed the thresholds for band 5, indicating a strong performance in both metrics. The consistent improvement and experimentation suggest a robust MLOps process.",
        "flags": [],
        "gaps": []
      },
      "mlflow.registry_hygiene_band": {
        "metric_id": "mlflow.registry_hygiene_band",
        "band": 1,
        "rationale": "Evidence is missing, which leads to a critical band rating. Without any data, it's impossible to assess the performance against the rubric criteria.",
        "flags": [
          "evidence_missing"
        ],
        "gaps": [
          "No evidence provided limits assessment → collect and report pct_staged, pct_with_approver, median_stage_latency_h, and rollback_count_30d → ensure all evidence is available (unlocks band 3)."
        ]
      },
      "mlflow.validation_artifacts_band": {
        "metric_id": "mlflow.validation_artifacts_band",
        "band": 1,
        "rationale": "All metrics are below the critical threshold of 0.60, indicating significant gaps in model evaluation and reporting. The absence of evidence limits the ability to assess model performance effectively.",
        "flags": [],
        "gaps": [
          "All metrics below 0.60 → implement mandatory reporting for SHAP, bias, and validation JSON → raise all metrics to ≥0.60 (unlocks band 2)."
        ]
      },
      "mlflow.reproducibility_band": {
        "metric_id": "mlflow.reproducibility_band",
        "band": 4,
        "rationale": "The match rate is strong at 0.92, which is above the threshold for band 4, and there are no signature conflicts present. However, it falls short of the excellent band 5 due to not reaching the 0.95 match rate threshold.",
        "flags": [],
        "gaps": [
          "Match rate at 0.92 is below 0.95 → enhance model consistency checks and optimize rerun conditions → raise match_rate to ≥0.95 (unlocks band 5)."
        ]
      },
      "aml.endpoint_slo_band": {
        "metric_id": "aml.endpoint_slo_band",
        "band": 5,
        "rationale": "All measured dimensions exceed SLOs with healthy margins.",
        "flags": [],
        "gaps": []
      },
      "aml.jobs_flow_band": {
        "metric_id": "aml.jobs_flow_band",
        "band": 3,
        "rationale": "Success rate is below 0.95, which limits the band; however, both p95 duration and lead time are within acceptable ranges.",
        "flags": [],
        "gaps": [
          "Success at 0.94 is the limiter → add retry-on-transient and resource quota checks → raise success_rate to ≥0.95 (unlocks band 4)."
        ]
      },
      "aml.monitoring_coverage_band": {
        "metric_id": "aml.monitoring_coverage_band",
        "band": 1,
        "rationale": "There is no evidence of monitors being enabled or any response process in place, which is critical for effective monitoring.",
        "flags": [],
        "gaps": [
          "Monitors are disabled → enable data/quality/drift monitors → establish a monitoring process (unlocks band 2)."
        ]
      },
      "aml.registry_governance_band": {
        "metric_id": "aml.registry_governance_band",
        "band": 3,
        "rationale": "While pct_staged and pct_with_approvals are above the minimum for band 3, the median transition time exceeds the threshold, limiting the overall band rating.",
        "flags": [],
        "gaps": [
          "Median transition time at 60h exceeds band-3 limit → optimize transition processes → reduce median_transition_h to <48h (unlocks band 5)."
        ]
      },
      "aml.cost_correlation_band": {
        "metric_id": "aml.cost_correlation_band",
        "band": 1,
        "rationale": "There is no provided evidence for cost_join_rate or coverage, indicating a critical lack of usable attribution. Without any data, it is impossible to assess the performance accurately.",
        "flags": [],
        "gaps": [
          "No usable attribution data → implement tracking for cost_join_rate and coverage → establish a baseline for cost_join_rate ≥0.40 (unlocks band 2)."
        ]
      },
      "sm.endpoint_slo_scaling_band": {
        "metric_id": "sm.endpoint_slo_scaling_band",
        "band": 5,
        "rationale": "All metrics exceed the thresholds for band 5, indicating excellent performance in availability, error rate, latency, and reaction time. The max RPS at SLO is also strong, demonstrating robust capacity under load.",
        "flags": [],
        "gaps": []
      },
      "sm.pipeline_flow_band": {
        "metric_id": "sm.pipeline_flow_band",
        "band": 4,
        "rationale": "The success rate is strong at 0.96, and the retry rate is within acceptable limits. However, the promotion time of 12 hours is at the upper limit for band 4.",
        "flags": [],
        "gaps": [
          "Promotion latency at 12h → automate risk sign-off and bake validation into CI → reduce promotion_time_h to ≤8h (unlocks band 5)."
        ]
      },
      "sm.experiments_lineage_band": {
        "metric_id": "sm.experiments_lineage_band",
        "band": 4,
        "rationale": "All lineage metrics are above 0.85, with two metrics above 0.90; however, the code reference at 0.90 prevents reaching band 5.",
        "flags": [],
        "gaps": [
          "Code ref at 0.90 limits to band-4 → implement stricter code review processes to ensure all experiments reference code → raise pct_code_ref to ≥0.95 (unlocks band 5)."
        ]
      },
      "sm.clarify_coverage_band": {
        "metric_id": "sm.clarify_coverage_band",
        "band": 4,
        "rationale": "Both metrics are above 0.80, indicating good coverage in bias reporting and explainability. The strongest positives are the high values for both metrics, which reflect a solid understanding of fairness and transparency. However, neither metric meets the threshold for excellence, limiting the band to 4.",
        "flags": [],
        "gaps": []
      },
      "sm.cost_efficiency_band": {
        "metric_id": "sm.cost_efficiency_band",
        "band": 5,
        "rationale": "The serving cost per 1k inferences is excellent at 0.065, and the training cost is also low at 3.2. Additionally, the GPU memory headroom is within the optimal range, and the idle ratio is below 0.20, indicating good utilization.",
        "flags": [],
        "gaps": []
      },
      "cicd.deploy_frequency_band": {
        "metric_id": "cicd.deploy_frequency_band",
        "band": 3,
        "rationale": "The frequency of deployments is approximately weekly per service, which meets the threshold for Band 3. However, the overall deployment frequency is below the threshold for Band 4 due to the limited number of services. This combination results in a fair rating.",
        "flags": [],
        "gaps": [
          "freq_per_week is below threshold for Band 4 → increase deployment frequency or add more services → target freq_per_week ≥ 5 (unlocks band 4)"
        ]
      },
      "cicd.lead_time_band": {
        "metric_id": "cicd.lead_time_band",
        "band": 4,
        "rationale": "p50 is 5.5h, which is within the band-4 threshold, and p95 is 20.0h, also within the band-4 threshold. However, the p50 exceeding 4h prevents achieving band-5.",
        "flags": [],
        "gaps": [
          "p50 at 5.5h prevents band-5 → optimize deployment processes and reduce bottlenecks → target p50 ≤4h (unlocks band 5)."
        ]
      },
      "cicd.change_failure_rate_band": {
        "metric_id": "cicd.change_failure_rate_band",
        "band": 4,
        "rationale": "CFR is at 0.18, which is within the band-4 limits, and rollbacks are very low at 1. However, the CFR is close to the upper limit of this band.",
        "flags": [
          "cfr_high"
        ],
        "gaps": [
          "CFR at 0.18 limits reliability → add contract tests and canary deploys → bring cfr < 0.15 (unlocks band 5)."
        ]
      },
      "cicd.policy_gates_band": {
        "metric_id": "cicd.policy_gates_band",
        "band": 4,
        "rationale": "All required checks are present, but the integration-tests are flaky, which affects reliability. The other checks have passed successfully.",
        "present": [
          "pytest",
          "integration-tests",
          "bandit",
          "trivy",
          "bias_check",
          "data_validation"
        ],
        "missing": [],
        "failing": [
          "integration-tests"
        ],
        "gaps": [
          "Flaky integration-tests reduce gate strength → quarantine flakies and make test non-optional pre-deploy → ensure passing before deploy (unlocks band 5)."
        ]
      },
      "cicd.artifact_lineage": {
        "metric_id": "cicd.artifact_lineage",
        "integrity_ok": true,
        "mismatches": []
      }
    },
    "mode": "single_inputs_json"
  }
]